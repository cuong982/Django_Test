version: '3.9'

services:
  db:
    image: postgres:14.2-alpine
    restart: always
    ports:
      - "5430:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - django-test-nw

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=1
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
    networks:
      - django-test-nw

  redis:
    image: redis:6.2-alpine
    networks:
      - django-test-nw
    ports:
      - "6371:6379"
  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: bash -c "celery -A batch_process worker --autoscale=25,3 --loglevel=info --statedb=/app/worker.state --logfile=logs/celery.log"
    volumes:
      - ./:/app
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
    depends_on:
      - web
      - redis
    networks:
      - django-test-nw

  adminer:
    image: adminer
    ports:
      - "5555:8080"
    networks:
      - django-test-nw

volumes:
  postgres_data:


networks:
  django-test-nw:
    driver: bridge
